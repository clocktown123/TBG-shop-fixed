#include<iostream>
using namespace std;

//global variables
string inventory[10];
int coins = 100;

//function decliration 
void BattleSystem();
int MonsterGen();
void itemDropper();
void Shop();

int PlayerHealth = 100; //global variable!

//function declarations


int main() {
	//intitialize it with all empty spaces
	for (int i = 0; i < 10; i++)
		inventory[i] = " ";


	srand(time(NULL)); //randomizes seed based on computers clock

	cout << "you're in an abandoned broken down house. You have lost your memory and have no clue about how you ended up here." << endl;
	int room = 1;
	char direction;
	bool key1 = false;

	do { //GAME LOOP

		//print out inventory
		//cout << "your inventory:" << endl;
		//for (int i = 0; i < 10; i++)
			//cout << inventory[i] << " ";
		//cout << endl;

		switch (room) {
		case 1:
			cout << "You seem to be in the living room right now with an empty (i)nventory. You can go (e)ast." << endl;
			cin >> direction;
			if (direction == 'e')
				room = 2;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			break;

		case 2:
			cout << "you're in a dim lighted room with nothing in it. You can go (s)outh or (w)est." << endl;
			cin >> direction;
			if (direction == 's')
				room = 3;
			else if (direction == 'w')
				room = 1;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			break;

		case 3:
			cout << "you're in a room with a creepy doll sitting in the corner. You can go (s)outh or (n)orth." << endl;
			cin >> direction;
			if (direction == 's')
				room = 4;
			else if (direction == 'n')
				room = 2;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			break;

		case 4:
			cout << "you're in a room that looks exactly the same as the last room, but there are two dolls now. You can go (e)ast or (n)orth." << endl;
			cin >> direction;
			if (direction == 'e')
				room = 5;
			else if (direction == 'n')
				room = 3;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			break;

		case 5:
			cout << "you're in a room filled with dolls, you see an old creeky stair case leading downstairs. You can go (w)est or (S)tairs." << endl;
			cin >> direction;
			if (direction == 'w')
				room = 4;
			if (direction == 'S')
				room = 6;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			break;

		case 6:
			cout << "you look around, you see a chair, desk, and an old broken down ceeling fan. You can go (S)tairs or (s)outh." << endl;
			cin >> direction;
			if (direction == 'S')
				room = 5;
			if (direction == 's')
				room = 7;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			break;

		case 7:
			cout << "this room has nothing in it, but you get an eerie feeling. You can go (n)orth or (e)ast." << endl;
			cin >> direction;
			if (direction == 'n')
				room = 6;
			if (direction == 'e')
				room = 8;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			break;

		case 8:
			cout << "you're in a dark room, you can just barely see a light at the end of the room. You can go (w)est or (e)ast." << endl;
			cin >> direction;
			if (direction == 'w')
				room = 7;
			if (direction == 'e')
				room = 9;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			break;

		case 9:
			cout << "you're in a room with 2 pathways in front of you. You can go (w)est, (n)orth, or (L)ocked door." << endl;
			
			cin >> direction;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			if (direction == 'w')
				room = 8;
			if (direction == 'n')
				room = 10;
			if (direction == 'L')
				if (inventory[0] == "key") {
					room = 11;
					cout << "You unlocked the door" << endl;
					inventory[0] = " "; //get rid of key
				}
				else
					cout << "The door is locked." << endl;
			break;

		case 10:
			cout << "you're in an empty broken down room. You can go (s)outh." << endl;
			if (inventory[0] != "key")
				cout << "Oh wait, you see a shiny (k)ey in the corner." << endl;
			cin >> direction;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			if (direction == 's')
				room = 9;
			if (direction == 'k') {
				cout << "you got a shiny key!" << endl;
				inventory[0] = "key";
			}
			break;

		case 11:
			BattleSystem();//function call
			
			cout << "you're in a room made of stone with a (m)etal door at the end, you feel and eerie feeling as you aprouch the door. You can go (w)est" << endl;
			cout << "theres a (t)reasure chest in the corner of the room" << endl;
			cin >> direction;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			if (direction == 'w')
				room = 9;
			if (direction == 'm')
				room = 12;
			if (direction == 't')// the player types 't' for this to run
				itemDropper();
			break;

		case 12:
			cout << "there is a very (o)ld man in the corner and an open (d)oorway at the end of the room." << endl;
			cin >> direction;
			if (direction == 'i')
				//print out inventory
				cout << "your inventory:" << endl;
			for (int i = 0; i < 10; i++)
				cout << inventory[i] << " ";
			cout << endl;
			if (direction == 'd')
				room = 13;
			if (direction == 'o')
				Shop();//call the function
			break;


		default:
			cout << "you should never see this!" << endl;
		}
	} while (direction != 'q');
}

void BattleSystem() {
	int MonsterType = MonsterGen();
	int MonsterHealth = 0;
	int MonsterDMG = 0;
	int PlayerDMG = 0;

	// set monsters health depending on the type 
	if (MonsterType == 1) {//skeleton
		MonsterHealth = 30;
	}

	if (MonsterType == 2) { //spider
		MonsterHealth = 15;
	}

	if (MonsterType == 3) { //zombie
		MonsterHealth = 25;
	}

	if (MonsterType == 4) { //golem
		MonsterHealth = 35;
	}

	if (MonsterType == 5) { //ghost
		MonsterHealth = 20;
	}

	//set the monster's damage depending on what type
	if (MonsterType == 1) { //skeleton
		MonsterDMG = rand() % 20 + 1;
	}

	if (MonsterType == 2) { //spider
		MonsterDMG = rand() % 6 + 5;
	}

	if (MonsterType == 3) { //zombie
		MonsterDMG = rand() % 15 + 1;
	}

	if (MonsterType == 4) { //golem
		MonsterDMG = rand() % 16 + 5;
	}

	if (MonsterType == 5) { //ghost
		MonsterDMG = rand() % 10 + 1;
	}

	while (MonsterHealth > 0 && PlayerHealth > 0) {
		cout << "Monster bites you for " << MonsterDMG << "HP" << endl;
		PlayerHealth -= MonsterDMG;
		PlayerDMG = rand() % 76; //Your attack is between 0 and 75
		cout << "You counter the monster for " << PlayerDMG << "HP" << endl << endl;
		MonsterHealth -= PlayerDMG;
		system("pause");
		cout << "Your health is now " << PlayerHealth << ", and the monster's health is " << MonsterHealth << endl;
		system("pause");

	}
	if (MonsterHealth <= 0)
		cout << "You won!" << endl;
	else
		cout << "You died :(" << endl;
}

//function definitions
int MonsterGen() {
	int num = rand() % 100; // creates a number from 0-99
	if (num < 15) {//15% chance
		cout << "a skeleton spawned!" << endl;
		return 1;
	}
	else if (num < 20) {//5% chance
		cout << "a spider crawls towards you." << endl;
		cout << "it jumps at you." << endl;
		return 2;
	}

	else if (num < 50) {//30%
		cout << "a zombie stumbles forward." << endl;
		cout << "it chomps towards you." << endl;
		return 3;
	}
	else if (num < 75) {//25% chance
		cout << "a golem rumbles towards you." << endl;
		cout << "it slams the floor infront of you." << endl;
		return 4;
	}
	else if (num < 100) {//25% chance
		cout << "a ghost floats through your body." << endl;
		cout << "it gives you the chills." << endl;
		return 5;
	}

}

void itemDropper() {
	int num = rand() % 100; //b/t 0-99
	if (num < 25) {
		cout << "you got a dirty sock" << endl;
		inventory[1] = "sock";
	}
	else if (num < 50) {
		cout << "you got a handful of legos!" << endl;
		inventory[2] = "legos";
	}
	else if (num < 60) {
		cout << "you got CHICKEN" << endl;
		inventory[3] = "chicken";

	}
	else {
		cout << "you didn't get anything" << endl;
	}
}

void Shop() {
	int input = 4324324;
	while (input != 0) {
		cout << "hey..." << endl;
		cout << "you... its you. How can I help you in your quest" << endl;
		cout << "items for sale:" << endl;
		cout << "sword: 20" << endl;
		cout << "potion: 10" << endl;
		cout << "armor: 80" << endl;
		cout << "press 0 to quit" << endl;
		cin >> input;
		if (input == 1) {
			if (coins >= 20) {
				cout << "you bought a sword!" << endl;
				inventory[4] = "sword";
				coins -= 20;
			}
			else
				cout << "sorry, youre too broke, goofy" << endl;
		}
		if (input == 2) {
			if (coins >= 10) {
				cout << "you bought a potion!" << endl;
				inventory[5] = "potion";
				coins -= 10;
			}
			else
				cout << "sorry, you're too broke" << endl;
		}
		if (input == 3) {
			if (coins >= 80) {
				cout << "you bought armor" << endl;
				inventory[6] = "armor";
				coins -= 80;
			}
			else
				cout << "wow, how are you so broke" << endl;
		}
	}while (input != '0');
}// end of shop function
